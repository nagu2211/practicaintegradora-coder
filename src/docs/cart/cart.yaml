paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        "200":
          description: Products were returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error on the server. Usually generating query or connection to DB
    post:
      summary: Add product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Product"  
      responses:
        "201":
          description: Product added successfully
        "409":
          description: Not added. The product is repeated           
        "500":
          description: Error on the server. Usually generating query or connection to DB
               
  /api/products/{_id}:
    get:
      summary: Get one product
      tags:
        - Products
      parameters:
        - name: _id
          in: path
          required: true
          description: ID of the product being searched
          schema:
            $type: String
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "404":
          description: Product not found
        "500":
          description: Error on the server. Usually generating query or connection to DB                
    put:
      summary: Update a product from ID
      tags:
        - Products
      parameters:
        - name: _id
          in: path
          required: true
          description: ID from product to update
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateUser"
      responses:
        "200":
          description: Product update successfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ProductUpdate"
        "401":
          description: Existing values
        "404":
          description: Product not found  
        "500":
          description: Error on the server. Usually generating query or connection to DB
    delete:
      summary: Delete a product from ID
      tags:
        - Products
      parameters:
        - name: _id
          in: path
          required: true
          description: ID from product to delete
          schema:
            $type: String
      responses:
        "200":
          description: Product deleted successfully
        "401":
          description: Unauthorized user
        "404":
          description: Product not found  
        "500":
          description: Error on the server. Usually generating query or connection to DB                  
components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: String
          description: success or error
        message:
          type: String
          description: aclarando que ocurrio
      example:
        status: success
        message: User updated
    ProductUpdate:
      type: object
      properties:
        stock:
          type: Number
          description: Item you want to update
      example:
        stock: 50
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generated by mongo
        title:
          type: String
          description: Name of product
        description:
          type: String
          description: Short description of the product
        code:
          type: Number
          description: Product code
        price:
          type: Number
          description: Product price
        stock:
          type: Number
          description: Quantity in stock of product
        category:
          type: String
          description: Product category
        thumbnail:
          type: String
          description: URL of the product image
      example:
        _id: ObjectId("644081a93f0625dc193bc594")
        title: apple
        description: red, crispy and sweet
        code: 456
        price: 450
        stock: 1
        category: fruit
        thumbnail: https://eldiariony.com/wp-content/uploads/sites/2/2022/10/semillas-de-manzana-shutterstock_1515666419.jpg?quality=75&strip=all&w=768&h=512&crop=1
  requestBodies:
    updateUser:
      type: object
      properties:
        stock:
          type: Number
          description: item you want to update
      example:
        stock: 50


